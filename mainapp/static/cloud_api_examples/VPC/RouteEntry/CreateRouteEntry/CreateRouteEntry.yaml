host: vpc.aliyuncs.com
info:
    description: 专有网络VPC（Virtual Private Cloud）是用户基于阿里云创建的自定义私有网络, 不同的专有网络之间二层逻辑隔离，用户可以在自己创建的专有网络内创建和管理云产品实例，比如ECS、负载均衡、RDS等。
    title: VPC
    version: '1.0'
paths:
    /CreateRouteEntry:
        get:
            consumes:
            - application/x-www-form-urlencoded
            description: <h2 id="h2--em-em-"><a name="<em>描述</em>" class="reference-link"></a><span class="header-link octicon octicon-link"></span><em>描述</em></h2><p>新建RouteEntry</p><p>支持在专有网络中的路由器（VRouter）和高速通道中的边界路由器（VBR）上的路由表（RouteTable）里，新建路由条目（RouteEntry）</p><p>在专有网络中的路由器上的RouteTable中创建RouteEntry：</p><ul><li>同一个路由表中自定义路由条目不能超过48条</li><li>RouteEntry的<code>DestinationCidrBlock</code>不允许和VPC内VSwitch的<code>CIDRBlock</code>相同，也不允许包含VSwitch的<code>CIDRBlock</code>或者被VSwitch的<code>CIDRBlock</code>包含</li><li>RouteEntry的<code>DestinationCidrBlock</code>网段不允许指向100.64.0.0/10，也不允许被100.64.0.0/10包含</li><li>同一RouteTable下RouteEntry的<code>DestinationCidrBlock</code>不允许相同</li><li>如果指定的<code>DestinationCidrBlock</code>是一个IP地址，会按照掩码为32位来处理</li><li>多条RouteEntry允许指向同一个<code>NextHopId</code></li><li>RouteEntry指定的下一跳<code>NextHopId</code>，必须属于所在的VPC</li><li>一个VPC内，指向HaVip的路由条目最多可以同时存在5条；</li><li>支持通过NextHopList参数配置ECMP路由：<ul><li><font color="#FF0000">添加普通（非 ECMP ）自定义路由时，需指定 <code>DestinationCidrBlock</code>、<code>NextHopType</code>（默认为Instance）
                和 <code>NextHopId</code>，且不能指定 <code>NextHopList</code>；</font></li><li><font color="#FF0000">添加 ECMP 路由时，需指定<code>DestinationCidrBlock</code>和 <code>NextHopList</code>，且不能指定<code>NextHopType</code> 和 <code>NextHopId</code>；</font></li></ul></li></ul><p>在边界路由器上的RouteTable中新建RouteEntry</p><ul><li>同一个路由表中自定义路由条目不能超过48条</li><li>不支持NextHopList参数</li><li>RouteEntry的<code>DestCidrBlock</code>网段不允许指向100.64.0.0/10，也不允许被100.64.0.0/10包含</li><li>同一RouteTable下RouteEntry的<code>DestCidrBlock</code>不允许相同</li><li>如果指定的<code>DestinationCidrBlock</code>是一个IP地址，会按照掩码为32位来处理</li><li>多条RouteEntry允许指向同一个<code>InstanceId</code></li><li>RouteEntry指定的下一跳<code>InstanceId</code>，必须属于所在的VBR</li><li>RouteEntry的下一跳类型仅支持RouterInterface</li><li>只允许在VBR状态是Active，而且对应的物理专线状态是Enabled且没有被欠费锁定的情况下在VBR上新建RouteEntry</li><li><font color="#FF0000">仅支持添加普通路由（非 ECMP），需指定 DestinationCidrBlock、NextHopType（默认为Instance） 和 NextHopId，且不能指定 NextHopList；</font></li></ul>
            parameters:
            -   description: 系统规定参数，取值：CreateRouteEntry
                enum:
                - CreateRouteEntry
                in: query
                name: Action
                required: true
                type: string
            -   description: RouteTableId
                in: query
                name: RouteTableId
                required: true
                type: string
            -   description: RouteEntry的目的网段
                in: query
                name: DestinationCidrBlock
                required: true
                type: string
            -   default: Instance
                description: 下一跳的类型，可选值为Instance|Tunnel|HaVip|RouterInterface|VpnGateway，默认值为Instance，即ECS实例
                enum:
                - Instance
                - Tunnel
                - HaVip
                - RouterInterface
                - VpnGateway
                in: query
                name: NextHopType
                required: false
                type: string
            -   description: 路由条目的下一跳实例ID，非ECMP路由
                in: query
                name: NextHopId
                required: false
                type: string
            -   description: 路由条目的下一跳列表如果指定了NextHopList，则该路由为ECMP类路由，NextHopList包含了ECMP方式的多个下一跳。此时NextHopType和NextHopId必须为空，NextHopList支持包含有2-4个下一跳。只支持VRouter上的路由指定NextHopList，而且下一跳只能是从VRouter连往VBR方向的RouterInterface<br>如果没有指定NextHopList，则该路由为非ECMP类路由。由NextHopType和NextHopId指定下一跳。
                in: query
                minItem: 2
                maxItem: 4
                name: NextHopList
                required: false
                type: array
                items:
                    x-schema:
                        type: object
                        name: NextHopItemType
                        properties:
                            Enabled:
                                description: 该下一跳是否可用，1表示可用，0表示不可用
                                enum:
                                - 1
                                - 0
                                name: Enabled
                                type: integer
                            NextHopId:
                                description: 下一跳实例ID
                                name: NextHopId
                                type: string
                            NextHopType:
                                description: 下一跳的目标对象类型，可选值为Instance|Tunnel|HaVip|RouterInterface
                                enum:
                                - Instance
                                - Tunnel
                                - HaVip
                                - RouterInterface
                                name: NextHopType
                                type: string
                            Weight:
                                description: 该下一跳的路由权重
                                name: Weight
                                type: integer

            -   description: 用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不值过64个ASCII字符。<br>具体参见附录：<a href="/document_detail/36569.html">如何保证幂等性</a>。
                in: query
                maxLength: 64
                name: ClientToken
                required: false
                type: string
            produces:
            - application/xml
            - application/json
            responses:
                200:
                    description: Accept
                    schema:
                        properties: {}
                        type: object
                400:
                    description: '{code: MissingParameter, describeen: The input parameter “Action” that is mandatory for processing this request is not supplied, describecn: 缺少 Action 字段}, {code: MissingParameter, describeen: The input parameter “AccessKeyId” that is mandatory for processing this request is not supplied, describecn: 缺少 AccessKeyId 字段}, {code: MissingParameter, describeen: An input parameter “Signature” that is mandatory for processing the request is not supplied., describecn: 缺少 Signature 字段}, {code: MissingParameter, describeen: The input parameter “TimeStamp” that is mandatory for processing this request is not supplied, describecn: 缺少 Timestamp 字段}, {code: MissingParameter, describeen: The input parameter “Version” that is mandatory for processing this request is not supplied, describecn: 缺少 Version 字段}, {code: InvalidParameter, describeen: The specified parameter “Action or Version” is not valid., describecn: 无效的 Action 值（该 API 不存在）}, {code: InvalidAccessKeyId.NotFound,
                        describeen: The Access Key ID provided does not exist in our records., describecn: 无效的 AccessKeyId 值（该 key 不存在）}, {code: IncompleteSignature, describeen: The request signature does not conform to Aliyun standards., describecn: 无效的 Signature 取值（签名结果错误）}, {code: InvalidParamater, describeen: The specified parameter “SignatureMethod” is not valid., describecn: 无效的 SignatureMethod 取值}, {code: InvalidParamater, describeen: The specified parameter “SignatureVersion” is not valid., describecn: 无效的 SignatureVersion 取值}, {code: IllegalTimestamp, describeen: The input parameter “Timestamp” that is mandatory for processing this request is not supplied., describecn: 无效的 Timestamp 取值（Timestamp 与服务器时间相差超过了 1 个小时）}, {code: SignatureNonceUsed, describeen: The request signature nonce has been used., describecn: 无效的 SignatureNonce（该 SignatureNonce 值已被使用过）}, {code: InvalidParameter, describeen: The specified parameter “Action or Version” is not valid., describecn: 无效的 Version 取值}, {code:
                        InvalidOwnerId, describeen: The specified OwnerId is not valid., describecn: 无效的 OwnerId 取值}, {code: InvalidOwnerAccount, describeen: The specified OwnerAccount is not valid., describecn: 无效的 OwnerAccount 取值}, {code: InvalidOwner, describeen: OwnerId and OwnerAccount can’t be used at one API access., describecn: 同时使用了 OwnerId 和 OwnerAccount}, {code: Throttling, describeen: Request was denied due to request throttling., describecn: 因系统流控拒绝访问}, {code: Throttling, describeen: Request was denied due to request throttling., describecn: 该 key 的调用 quota 已用完}, {code: UnsupportedParameter, describeen: The parameter ”&lt;parameter name&gt;” is not supported., describecn: 使用了无效的参数}, {code: UnsupportedParameter, describeen: The parameter ”&lt;parameter name&gt;” is not supported., describecn: 该参数无权使用}, {code: InsufficientBalance, describeen: Your account does not have enough balance., describecn: 余额不足}, {code: IdempotentParameterMismatch, describeen: Request uses a client token
                        in a previous request but is not identical to that request., describecn: 使用了一个已经使用过的 ClientToken，但此次请求内容却又与上一次使用该 Token 的 request 不一样.}, {code: InvalidParameter, describeen: The specified parameter is not valid, describecn: 参数校验失败},{code: InvalidVRouterName.Malformed, describeen: Specified virtual router name is not valid., describecn: 指定的路由器名字格式不符合要求}, {code: InvalidVRouterDiscription.Malformed, describeen: Specified virtual router description is not valid., describecn: 指定的路由器描述信息格式不符合要求},{code: InvalidCidrBlock.Malformed, describeen: Specified CIDR block is not valid., describecn: 指定的 CIDR 格式不正确}, {code: InvalidVSwitchName.Malformed, describeen: Specified virtual switch name is not valid., describecn: 指定的 VSwitch 名字格式不正确}, {code: InvalidVSwitchDiscription.Malformed, describeen: Specified  virtual switch description is not valid., describecn: 指定的 VSwitch 描述信息格式不正确}, {code: ResourceNotAvailable, describeen: Resource you requested is not available in this region or
                        zone., describecn: 指定的 Region 或者可用区不支持 VPC}, {code: InvalidParameter, describeen: Specified CIDR block is not valid in VPC., describecn: 指定的 CIDR 不正确}, {code: InvalidCidrBlock.Overlapped, describeen: Specified CIDR block overlapped with other subnets., describecn: 指定的 CIDR 与其他 VSwitch 的 CIDR 重叠}, {code: InvalidCidrBlock.Overlapped, describeen: Specified CIDR block overlapped with other entry, describecn: 指定的 CIDR 与已有的自定义路由的 CIDR 重叠}, {code: QuotaExceeded.VSwitch, describeen: Virtual switch quota exceeded., describecn: VSwitch 数量达到配额上限}, {code: IncorretRouteEntryStatus, describeen: Some route entry status blocked this operation., describecn: 部分自定义路由处于 pending 状态，创建 VSwitch 失败}, {code: IncorretVSwitchStatus, describeen: Some virtual switch is modifying within the same VPC., describecn: 部分 VSwitch 处于 pending 状态，创建 VSwitch 失败}, {code: InvalidCirdrBlock.MaskLength, describeen: Specified CIDR block is not valid., describecn: 指定的 CIDR 网段格式不正确}, {code: IncorrectVpcStatus,
                        describeen: Current VPC status does not support this operation., describecn: 指定的 VPC 处于 pending 状态，创建 VSwitch 失败},{code: IncorrectVSwitchStatus, describeen: The current virtual switch status does not support this operation., describecn: 指定的VSwitch处于pending状态，无法删除}, {code: DependencyViolation, describeen: Specified object has dependent resources., describecn: 指定的VSwitch还有资源未释放，无法删除}, {code: DependencyViolation.HaVip, describeen: VSwitch cannot be deleted when there are some HaVip dependent with it., describecn: 指定的VSwitch还有HaVip资源未释放，无法删除}, {code: IncorretRouteEntryStatus, describeen: Some route entry status blocked this operation., describecn: 部分自定义路由条目处于pending状态，无法删除},{code: InvalidVSwitchName.Malformed, describeen: Specified virtual switch name is not valid., describecn: 指定的 VSwitch 名字格式不正确}, {code: InvalidVSwitchDiscription.Malformed, describeen: Specified virtual switch description is not valid., describecn: 指定的 VSwitch 描述内容格式不正确},{code: MissingParameter, describeen:
                        Miss mandatory parameter., describecn: 缺少必要参数参数}, {code: InvalidCidrBlock.Malformed, describeen: Specified CIDR block is not valid., describecn: 指定的网段不合法}, {code: InvalidCIDRBlock.Duplicate, describeen: Specified CIDR block is already exists., describecn: 指定的网段已经在该路由表中存在}, {code: IncorrectVpcStatus, describeen: Current VPC status does not support this operation., describecn: 所指定的VPC未创建完成}, {code: QuotaExceeded, describeen: Route entry quota exceeded in this route table., describecn: 同一个路由表中自定义路由条目不能超过48条}, {code: IncorretRouteEntryStatus, describeen: Some route entry status blocked this operation., describecn: 同一个vpc下面的路由表中的任一个路由条目/VSwitch处在中间状态（添加中，修改中，删除中），不能创建路由条目}, {code: InvalidCidrBlock, describeen: Specified CIDR block is not valid., describecn:                 1. 该用户不在10.0.0.0/8的路由网段的白名单中，不能使用该网段。 <br>                2. 添加的自定义路由目标网段不能从属于同一个vpc下面所有vswitch的网段。<br>                3. 网段不能是：100.64.0.0/10。            }, {code: InvalidNexthopTypeAndList.BothNull,
                        describeen: both nexthopType and nextHopList are null., describecn: NexthopType和NextHopList不能同时为空}, {code: InvalidRouterInterface, describeen: invalid router interface., describecn: 指定的RouterInterface不合法}, {code: InvalidOppositeRouterType, describeen: nexthop list cannot only contain router interface whose opposite router interface is on vbr., describecn: NextHopList只能包含对端路由器接口在VBR上的路由器接口}, {code: InvalidNexthopListSize, describeen: nexthop size is illegal. Must be between 2 and 4., describecn: NextHopList中需要包含2-4个下一跳}, {code: CountLimitExceed.HaVipRouteEntry, describeen: There can be 5 route entry to HaVip at most in one route table., describecn: 一个VPC内，指向HaVip对象的路由最多同时只能存在五条。}, {code: IncorrectHaVipStatus, describeen: This operation is denied because satus of the specified HaVip is neither Available nor InUse., describecn: 只有当HaVip的状态为Available或者InUse时，创建指向这个HaVip的路由。}, {code: InvalidVBRStatus, describeen: invalid virtual border router status., describecn: VBR状态不合法},
                        {code: InvalidPhysicalConnectionBusinessStatus, describeen: invalid physical connection business status., describecn: 物理专线业务状态被锁定}, {code: InvalidRouterType, describeen: Cannot specify nexthop list in vbr’s route table., describecn: 不能在VBR的路由表中指定NextHopList}, {code: InvalidRouteEntry.Duplicate, describeen: The route entry already exist., describecn: 该路由条目已经存在}'
                403:
                    description: '{code: Forbidden.AccessKeyDisabled, describeen: The Access Key is disabled., describecn: 该 AccessKey 处于禁用状态}, {code: InvalidAction, describeen: Specified action is not valid., describecn: 该 key 无权调用该 API}, {code: UnsupportedHTTPMethod, describeen: This http method is not supported., describecn: 用户使用了不支持的 Http Method（当前 TOP 只支持 post 和 get）}, {code: MissingParameter, describeen: The input parameter OwnerId,OwnerAccount that is mandatory for processing this request is not supplied., describecn: 调用该接口没有指定 OwnerId}, {code: Forbidden.SubUser, describeen: The specified action is not available for you。, describecn: 无权调用订单类接口}, {code: Forbidden.RAM, describeen: User not authorized to operate the specified resource, or this API doesn’t support RAM., describecn: 使用了 RAM 授权子账号进行资源访问,但是本次操作没有被正确的授权}, {code: Forbidden.NotSupportRAM, describeen: This action does not support accessed by RAM mode., describecn: 该接口不允许使用 RAM 方式进行访问}, {code: RealNameAuthenticationError, describeen:
                        Your account has not passed the real-name authentication yet., describecn: 用户未进行实名认证}, {code: InvalidIdempotenceParameter.Mismatch, describeen: The specified parameters are different from before, describecn: 幂等参数不匹配}, {code: LastTokenProcessing, describeen: The last token request is processing, describecn: 上一次请求还在处理中},{code: IncorrectInstanceStatus, describeen: The current status of the resource does not support this operation., describecn: 指定实例的状态不支持当前操作}'
                404:
                    description: '{code: Forbidden.InstanceNotFound, describeen: The specified Instance is not found, so we cann’t get enough information to check permission in RAM., describecn: 使用了 RAM 授权子账号进行资源访问，但是本次访问涉及到的 Instance 不存在}, {code: Forbidden.DiskNotFound, describeen: The specified Disk is not found, so we cann’t get enough information to check permission in RAM., describecn: 使用了 RAM 授权子账号进行资源访问,但是本次访问涉及到的 Disk 不存在}, {code: Forbidden.SecurityGroupNotFound, describeen: The specified SecurityGroup is not found, so we cann’t get enough information to check permission in RAM., describecn: 使用了 RAM 授权子账号进行资源访问,但是本次访问涉及到的 SecurityGroup 不存在}, {code: Forbidden.SnapshotNotFound, describeen: The specified Snapshot is not found, so we cann’t get enough information to check permission in RAM., describecn: 使用了 RAM 授权子账号进行资源访问,但是本次访问涉及到的 Snapshot 不存在}, {code: Forbidden.ImageNotFound, describeen: The specified Image is not found, so we cann’t get enough information to check permission in
                        RAM., describecn: 使用了 RAM 授权子账号进行资源访问,但是本次访问涉及到的 Image 不存在},{code: Forbidden.RegionNotFound, describeen: Specified region is not found during access authentication., describecn: 指定的 Region 不存在},{code: InvalidVRouterId.NotFound, describeen: Specified virtual router does not exist., describecn: 指定的路由器不存在},{code: InvalidZoneId.NotFound, describeen: Specified zone does not exist., describecn: 指定的可用区不存在}, {code: InvalidVpcId.NotFound, describeen: Specified VPC does not exist., describecn: 指定的 VPC 不存在},{code: InvalidRegionId.NotFound, describeen: The RegionId provided does not exist in our records., describecn: 指定的 RegionId 不存在},{code: Forbidden.VpcNotFound, describeen: Specified VPC is not found during access authentication., describecn: 指定的 VPC 不存在},{code: InvalidVSwitchId.NotFound, describeen: The specified virtual switch does not exists., describecn: 指定的 VSwitch 不存在},{code: InvalidNextHopId.NotFound, describeen: Specified next hop does not exist., describecn: 指定的NextHopId不存在},
                        {code: InvalidInstanceId.NotFound, describeen: Specified instance does not exist., describecn: 指定的ECS实例不存在（实例不在该vpc下）}, {code: InvalidRouteTableId.NotFound, describeen: Specified route table does not exist., describecn: 指定的虚拟路由表不存在}, {code: InvalidNextHop.NotFound, describeen: Specified next hop does not exist., describecn: 指定的next hop不存在}, {code: InvalidHaViNpId.NotFound, describeen: The specified HaVip does not exist in the specified VPC., describecn: 指定的HaVip不存在，或者不属于当前RouterTable所在的VPC。}'
                500:
                    description: '{code: ServiceUnavailable, describeen: The request has failed due to a temporary failure of the server., describecn: 服务不可用}, {code: InternalError, describeen: The request processing has failed due to some unknown error, exception or failure., describecn: 其他情况}'
        parameter:
            $ref: '#/paths/"/public"/request/parameters'
        summary: 新建自定义路由条目
        x-requestsample:
        -   description: <pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">https</span><span class="pun">:</span><span class="com">//vpc.aliyuncs.com/?Action=CreateRouteEntry</span></code></li><li class="L1"><code><span class="pun">&amp;</span><span class="typ">VpcId</span><span class="pun">=</span><span class="pln">vpc</span><span class="pun">-</span><span class="lit">257gq642n</span></code></li><li class="L2"><code><span class="pun">&amp;</span><span class="typ">RouteTableId</span><span class="pun">=</span><span class="pln">vrt</span><span class="pun">-</span><span class="lit">5citwfp6a</span></code></li><li class="L3"><code><span class="pun">&amp;</span><span class="typ">DestinationCidrBlock</span><span class="pun">=</span><span class="lit">0.0</span><span class="pun">.</span><span class="lit">0.0</span><span class="pun">/</span><span class="lit">0</span></code></li><li class="L4"><code><span class="pun">&amp;</span><span class="typ">NextHopId</span><span
                class="pun">=</span><span class="pln">i</span><span class="pun">-</span><span class="lit">25skktcp4</span></code></li><li class="L5"><code><span class="pun">&amp;</span><span class="typ">NextHopType</span><span class="pun">=</span><span class="typ">Instance</span></code></li><li class="L6"><code><span class="pun">&amp;&lt;公共请求参数&gt;</span></code></li></ol></pre>
            id: 1
        -   description: <pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">https</span><span class="pun">:</span><span class="com">//vpc.aliyuncs.com/?Action=CreateRouteEntry</span></code></li><li class="L1"><code><span class="pun">&amp;</span><span class="typ">VpcId</span><span class="pun">=</span><span class="pln">vpc</span><span class="pun">-</span><span class="lit">257gq642n</span></code></li><li class="L2"><code><span class="pun">&amp;</span><span class="typ">RouteTableId</span><span class="pun">=</span><span class="pln">vrt</span><span class="pun">-</span><span class="lit">5citwfp6a</span></code></li><li class="L3"><code><span class="pun">&amp;</span><span class="typ">DestinationCidrBlock</span><span class="pun">=</span><span class="lit">0.0</span><span class="pun">.</span><span class="lit">0.0</span><span class="pun">/</span><span class="lit">0</span></code></li><li class="L4"><code><span class="pun">&amp;</span><span class="typ">NextHopId</span><span
                class="pun">=</span><span class="pln">i</span><span class="pun">-</span><span class="lit">25skktcp4</span></code></li><li class="L5"><code><span class="pun">&amp;</span><span class="typ">NextHopType</span><span class="pun">=</span><span class="typ">Instance</span></code></li><li class="L6"><code><span class="pun">&amp;&lt;公共请求参数&gt;</span></code></li></ol></pre>
            id: 2
        x-responsesample:
        -   description: <pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code class="lang-xml"><span class="tag">&lt;CreateRouteEntryResponse&gt;</span></code></li><li class="L1"><code class="lang-xml"><span class="pln">    </span><span class="tag">&lt;RequestId&gt;</span><span class="pln">12D086F6-8F31-4658-84C1-006DED011A85</span><span class="tag">&lt;/RequestId&gt;</span></code></li><li class="L2"><code class="lang-xml"><span class="tag">&lt;/CreateRouteEntryResponse&gt;</span></code></li></ol></pre>
            id: 1
            note: XML格式
        -   description: <pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code class="lang-json"><span class="pun">{</span></code></li><li class="L1"><code class="lang-json"><span class="pln">  </span><span class="str">"RequestId"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"12D086F6-8F31-4658-84C1-006DED011A85"</span></code></li><li class="L2"><code class="lang-json"><span class="pun">}</span></code></li></ol></pre>
            id: 2
            note: JSON格式
    /public:
        request:
            parameters:
            -   default: XML
                description: 返回值的类型，支持 JSON 与 XML。默认为 XML。
                enum:
                - XML
                - JSON
                in: query
                name: Format
                required: false
                type: string
            -   description: API 版本号，为日期形式：YYYY-MM-DD，本版本对应为 2014-05-26。
                in: query
                name: Version
                required: true
                type: string
            -   description: 阿里云颁发给用户的访问服务所用的密钥 ID。
                in: query
                name: AccessKeyId
                required: true
                type: string
            -   description: 签名结果串，关于签名的计算方法，请参见&lt;<a href="/document_detail/25492.html">签名机制</a>&gt;。
                in: query
                name: Signature
                required: true
                type: string
            -   description: 签名方式，目前支持 HMAC-SHA1。
                in: query
                name: SignatureMethod
                required: true
                type: string
            -   description: '        请求的时间戳。日期格式按照 <a href="/document_detail/25696.html">ISO8601</a> 标准表示，并需要使用 UTC 时间。格式为： <br />        YYYY-MM-DDThh:mm:ssZ <br />        例如，2014-05-26T12:00:00Z（为北京时间 2014 年 5 月 26 日 20 点 0 分 0 秒）。    '
                in: query
                name: Timestamp
                required: true
                type: string
            -   description: 签名算法版本，目前版本是 1.0。
                in: query
                name: SignatureVersion
                required: true
                type: string
            -   description: 唯一随机数，用于防止网络重放攻击。用户在不同请求间要使用不同的随机数值
                in: query
                name: SignatureNonce
                required: true
                type: string
            -   description: '本次 API 请求访问到的资源拥有者账户，即登录用户名。 <br />        此参数的使用方法，详见&lt; <a href="/document_detail/25494.html">借助 RAM 实现子账号对主账号的 ECS 资源访问</a> &gt;，（只能在 <a href="/document_detail/25496.html">RAM 中可对 ECS 资源进行授权的 Action</a> 中才能使用此参数，否则访问会被拒绝）    '
                in: query
                name: ResourceOwnerAccount
                required: false
                type: string
        response:
            RequestId:
                description: 用户发送的每次接口调用请求，无论成功与否，系统都会返回一个唯一识别码
                in: body
                name: RequestId
                type: string
swagger: '2.0'
x-vee: 2.0 AS
