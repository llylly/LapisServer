<?xml version="1.0" encoding="UTF-8"?>
<root>
  <host value="cs.aliyuncs.com"/>
  <info>
    <description value="容器服务（Container Service）提供高性能可伸缩的容器应用管理服务，支持用 Docker 容器进行应用生命周期管理，提供多种应用发布方式和持续交付能力并支持微服务架构。容器服务简化了容器管理集群的搭建工作，整合了阿里云虚拟化、存储、网络和安全能力，打造 Docker 云端最佳运行环境。"/>
    <title value="aliyun object api"/>
    <version value="1.0"/>
  </info>
  <paths>
    <node nodeName="/Scale service/services/{service_id}/scale">
      <parameter>
        <node nodeName="$ref" value="#/paths/&quot;/public&quot;/request/parameters"/>
      </parameter>
      <post>
        <consumes nodeType="array">
          <consumes value="application/xml"/>
          <consumes value="application/json"/>
        </consumes>
        <description value="伸缩一个服务实例中所包含容器到指定数量。"/>
        <parameters nodeType="array">
          <parameters>
            <description value="服务实例 ID, 格式为 {project_name}_{service_name}"/>
            <in value="path"/>
            <name value="service_id"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value=""/>
            <in value="body"/>
            <name value="Scaleservice"/>
            <required value="true"/>
            <schema>
              <properties>
                <type>
                  <name value="type"/>
                  <required value="true"/>
                  <type value="string"/>
                </type>
                <value>
                  <name value="value"/>
                  <required value="true"/>
                  <type value="integer"/>
                </value>
              </properties>
              <type value="object"/>
            </schema>
            <type value="object"/>
          </parameters>
        </parameters>
        <produces nodeType="array">
          <produces value="application/xml"/>
          <produces value="application/json"/>
        </produces>
        <responses>
          <node nodeName="200">
            <description value="OK"/>
          </node>
        </responses>
      </post>
      <summary value="伸缩服务实例"/>
      <x-requestbody value=" { &quot;type&quot;: &quot;string&quot;, &quot;value&quot;: &quot;int&quot; } "/>
      <x-requestheader value=" POST /services/{service_id}/scale HTTP/1.1 "/>
      <x-requestsample nodeType="array">
        <x-requestsample>
          <description value=" POST /services/test_web/scale HTTP/1.1 Content-Type: application/json { &quot;type&quot;: &quot;scale_to&quot;, &quot;value&quot;: 3 } "/>
          <id value="1"/>
          <note value="将 test_web 服务定义的容器实例数改变为 3 个。"/>
        </x-requestsample>
      </x-requestsample>
      <x-responsebody value="&#10;"/>
      <x-responseheader value=" HTTP/1.1 200 OK "/>
      <x-responsesample nodeType="array">
        <x-responsesample>
          <description value=" HTTP/1.1 200 Ok "/>
          <id value="1"/>
        </x-responsesample>
      </x-responsesample>
    </node>
    <node nodeName="/public">
      <request>
        <parameters nodeType="array">
          <parameters>
            <description value="用于验证请求合法性的认证信息，采用 AccessKeyId:Signature 的形式。"/>
            <in value="header"/>
            <name value="Authorization"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value="RFC 2616 中定义的 HTTP 请求内容长度。"/>
            <in value="header"/>
            <name value="Content-Length"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value="RFC 2616 中定义的 HTTP 请求内容类型。"/>
            <in value="header"/>
            <name value="Content-Type"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value="用于验证请求合法性的认证信息，采用 AccessKeyId:Signature 的形式。"/>
            <in value="header"/>
            <name value="Content-MD5"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value="RFC 2616 中定义的 HTTP 请求内容长度。"/>
            <in value="header"/>
            <name value="Date"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value="访问 Host 值，例如：diku.aliyuncs.com。"/>
            <in value="header"/>
            <name value="Host"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value="客户端需要的返回值类型，支持application/json 和 application/xml。"/>
            <enum nodeType="array">
              <enum value="application/json"/>
              <enum value="application/xml"/>
            </enum>
            <in value="header"/>
            <name value="Accept"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value="地域（Region）指的是 ECS 实例所在的物理位置。更多详细信息参见 地域概念 和 ECS查询可用地域列表。"/>
            <in value="header"/>
            <name value="x-acs-region-id"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value="唯一随机数，用于防止网络重放攻击。您在不同请求间要使用不同的随机数值。"/>
            <in value="header"/>
            <name value="x-acs-signature-nonce"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
          <parameters>
            <description value="用户签名方式，目前只支持HMAC-SHA1。"/>
            <enum nodeType="array">
              <enum value="HMAC-SHA1"/>
            </enum>
            <in value="header"/>
            <name value="x-acs-signature-method"/>
            <required value="true"/>
            <type value="string"/>
          </parameters>
        </parameters>
      </request>
      <response>
        <RequestId>
          <description value="您发送的每次接口调用请求，无论成功与否，系统都会返回一个唯一识别码"/>
          <in value="body"/>
          <name value="RequestId"/>
          <type value="string"/>
        </RequestId>
      </response>
    </node>
  </paths>
  <swagger value="2.0"/>
  <x-vee value="2.0 AS"/>
</root>
